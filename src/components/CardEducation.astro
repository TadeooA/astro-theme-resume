---
// src/components/EducationItem.astro
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { cn } from '@/utils'

interface Props {
  as?: 'div' | 'a' | 'section' | 'article';
  class?: string;
  institution: string;
  degree: string;
  fieldOfStudy?: string;
  period: string;
  isCompleted?: boolean;
  grade?: string;
  icon?: string;
  imagePath?: string;
  altText?: string;
  imageClass?: string;
  href?: string;
}

const {
  as: Tag = 'div',
  class: className,
  institution,
  degree,
  fieldOfStudy,
  period,
  isCompleted = true,
  grade,
  icon,
  imagePath,
  altText = `${institution} logo`,
  imageClass,
  href
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif,svg}')

if (imagePath && !images[imagePath]) {
  throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif,svg}"`)
}

const containerClasses = cn(
  className,
  'relative rounded-2xl border-2 border-dashed backdrop-blur-sm bg-transparent  p-8 md:p-6',
  'transition-all hover:border-neutral-300 dark:hover:border-neutral-600 hover:bg-white/80 dark:hover:bg-neutral-950/80',
  !isCompleted && 'border-yellow-400/50',
  href && 'hover:shadow-lg'
);
---

<Fragment>
  {Tag === 'a' ? (
    <a 
      href={href}
      class={cn(containerClasses, 'group')}
    >
      <div class="flex flex-col md:flex-row gap-4 ">
        {imagePath && (
          <div class="flex-shrink-0">
            <Image
              src={images[imagePath]() }
              alt={altText}
              class={cn('w-16 h-16 object-contain rounded-lg', imageClass)}
              loading="eager"
              width={64}
              height={64}
            />
          </div>
        )}

        {!imagePath && icon && (
          <div class="flex-shrink-0 flex items-center  justify-center w-16 h-16 bg-primary/10 rounded-lg">
            <i class={cn(icon, 'text-2xl text-primary')}></i>
          </div>
        )}

        <div class="flex-1 flex flex-col gap-y-1.5">
          <div class="flex flex-col gap-y-0.5">
            <h1 class="text-lg font-medium">{degree}</h1>
            <h2 class="text-muted-foreground font-semibold">{institution}</h2>
            {fieldOfStudy && <p class="text-sm text-muted-foreground">{fieldOfStudy}</p>}
            
            <div class="flex items-center gap-2 mt-1">
              <span class="text-sm text-muted-foreground">{period}</span>
              {grade && (
                <span class="text-sm px-2 py-0.5 bg-primary/10 text-primary rounded-full">
                  {grade}
                </span>
              )}
              {!isCompleted && (
                <span class="text-sm px-2 py-0.5 bg-yellow-400/10 text-yellow-600 rounded-full">
                  En progreso
                </span>
              )}
            </div>
          </div>
          
          <div class="mt-2">
            <slot name="description" />
          </div>
          
          <slot />
        </div>
      </div>
    </a>
  ) : (
    <div class={cn(containerClasses, 'group')}>
      <div class="flex flex-col md:flex-row gap-4">
        {imagePath && (
          <div class="flex-shrink-0">
            <Image
              src={images[imagePath]() }
              alt={altText}
              class={cn('w-16 h-16 object-contain rounded-lg', imageClass)}
              loading="eager"
              width={64}
              height={64}
            />
          </div>
        )}

        {!imagePath && icon && (
          <div class="flex-shrink-0 flex items-center justify-center w-16 h-16 bg-primary/10 rounded-lg">
            <i class={cn(icon, 'text-2xl text-primary')}></i>
          </div>
        )}

        <div class="flex-1 flex flex-col gap-y-1.5">
          <div class="flex flex-col gap-y-0.5">
            <h1 class="text-lg font-medium">{degree}</h1>
            <h2 class="text-muted-foreground font-semibold">{institution}</h2>
            {fieldOfStudy && <p class="text-sm text-muted-foreground">{fieldOfStudy}</p>}
            
            <div class="flex items-center gap-2 mt-1">
              <span class="text-sm text-muted-foreground">{period}</span>
              {grade && (
                <span class="text-sm px-2 py-0.5 bg-primary/10 text-primary rounded-full">
                  {grade}
                </span>
              )}
              {!isCompleted && (
                <span class="text-sm px-2 py-0.5 bg-yellow-400/10 text-yellow-600 rounded-full">
                  En progreso
                </span>
              )}
            </div>
          </div>
          
          <div class="mt-2">
            <slot name="description" />
          </div>
          
          <slot />
        </div>
      </div>
    </div>
  )}
</Fragment>

